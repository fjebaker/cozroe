From d0d2b0a5049c398abb00adad4fd7ae234a8a9512 Mon Sep 17 00:00:00 2001
From: fjebaker <fergusbkr@gmail.com>
Date: Mon, 12 Sep 2022 15:04:27 +0100
Subject: [PATCH] patch to work

---
 src/gemini.zig | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/gemini.zig b/src/gemini.zig
index 00c0c58..f704282 100644
--- a/src/gemini.zig
+++ b/src/gemini.zig
@@ -151,7 +151,7 @@ pub const GeminiListener = struct {
         var client_sock: network.Socket = try sock.accept();
         errdefer client_sock.close();
 
-        logger.debug("accepted tcp connection from {!}", .{client_sock.getRemoteEndPoint()});
+        logger.info("{!}: accepted tcp connection", .{client_sock.getRemoteEndPoint()});
 
         var temp_memory = std.heap.ArenaAllocator.init(self.allocator);
         errdefer temp_memory.deinit();
@@ -159,6 +159,7 @@ pub const GeminiListener = struct {
         const context = try temp_memory.allocator().create(GeminiContext);
         context.* = GeminiContext{
             .memory = temp_memory,
+            .client_sock = client_sock,
             .request = GeminiRequest{
                 .url = undefined,
                 .requested_server_name = null,
@@ -173,7 +174,7 @@ pub const GeminiListener = struct {
         context.response.ssl = try tls.accept(&context.response.socket);
         errdefer context.response.ssl.close();
 
-        logger.debug("accepted tls connection", .{});
+        // logger.debug("accepted tls connection", .{});
 
         context.request.client_certificate = try context.response.ssl.getPeerCertificate();
 
@@ -187,7 +188,7 @@ pub const GeminiListener = struct {
             url_string = url_string[0 .. url_string.len - 1];
         }
 
-        logger.info("request for {s}", .{url_string});
+        logger.info("{!}: request for {s}", .{client_sock.getRemoteEndPoint(), url_string});
 
         const url_string_owned = try context.memory.allocator().dupeZ(u8, url_string);
         context.request.url = try uri.parse(url_string_owned);
@@ -197,6 +198,7 @@ pub const GeminiListener = struct {
 
 pub const GeminiContext = struct {
     memory: std.heap.ArenaAllocator,
+    client_sock: network.Socket,
 
     request: GeminiRequest,
     response: GeminiResponse,
-- 
2.32.1 (Apple Git-133)

